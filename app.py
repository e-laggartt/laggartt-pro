# app.py
import streamlit as st
import pandas as pd
from utils.data_loader import load_radiator_data  # –ò–°–ü–†–ê–í–õ–ï–ù –ò–ú–ü–û–†–¢
from utils.session_manager import initialize_session_state

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="RadiaTool Pro v2.0",
    page_icon="üîß",
    layout="wide",
    initial_sidebar_state="expanded"
)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    initialize_session_state()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.title("üîß RadiaTool Pro v2.0")
    st.markdown("---")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if 'sheets' in st.session_state and st.session_state.sheets:
        sheet_count = len(st.session_state.sheets)
        st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ª–∏—Å—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {sheet_count}")
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã
        with st.expander("üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã"):
            for sheet_name in st.session_state.sheets.keys():
                st.write(f"- {sheet_name}")
    else:
        st.warning("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.")
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    st.header("üöÄ –ù–∞–≤–∏–≥–∞—Ü–∏—è")
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        if st.button("üè† –ú–∞—Ç—Ä–∏—Ü–∞ —Ä–∞–¥–∏–∞—Ç–æ—Ä–æ–≤", use_container_width=True):
            st.switch_page("pages/–ì–ª–∞–≤–Ω–∞—è.py")
    
    with col2:
        if st.button("üìã –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è", use_container_width=True):
            st.switch_page("pages/02_üìã_–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è.py")
    
    with col3:
        if st.button("üìä –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", use_container_width=True):
            st.switch_page("pages/03_üìä_–ò–º–ø–æ—Ä—Ç_–¥–∞–Ω–Ω—ã—Ö.py")
    
    with col4:
        if st.button("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", use_container_width=True):
            st.switch_page("pages/04_‚ÑπÔ∏è_–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.py")
    
    # –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
    st.markdown("---")
    st.header("üéØ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç")
    
    st.markdown("""
    1. **–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "üè† –ú–∞—Ç—Ä–∏—Ü–∞ —Ä–∞–¥–∏–∞—Ç–æ—Ä–æ–≤"** –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    2. **–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã** –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏:
       - –¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (VK-–ø—Ä–∞–≤–æ–µ, VK-–ª–µ–≤–æ–µ, K-–±–æ–∫–æ–≤–æ–µ)
       - –¢–∏–ø —Ä–∞–¥–∏–∞—Ç–æ—Ä–∞ (10, 11, 20, 21, 22, 30, 33)
       - –¢–∏–ø –∫—Ä–µ–ø–ª–µ–Ω–∏—è
    3. **–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Ç—Ä–∏—Ü—É** - –≤–≤–æ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ —è—á–µ–π–∫–∏
    4. **–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "üìã –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è"** –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
    """)
    
    # –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    st.markdown("---")
    st.header("üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        entry_count = len(st.session_state.entry_values)
        filled_count = len([v for v in st.session_state.entry_values.values() if v])
        st.metric("–ó–∞–ø–æ–ª–Ω–µ–Ω–æ —è—á–µ–µ–∫", f"{filled_count}/{entry_count}")
    
    with col2:
        spec_count = len(st.session_state.spec_data) if hasattr(st.session_state.spec_data, '__len__') else 0
        st.metric("–ü–æ–∑–∏—Ü–∏–π –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏", spec_count)
    
    with col3:
        st.metric("–í–µ—Ä—Å–∏—è", "2.0")

if __name__ == "__main__":
    main()