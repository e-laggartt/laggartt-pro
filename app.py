import streamlit as st
import pandas as pd
import numpy as np
from pathlib import Path

# === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–¢–†–ê–ù–ò–¶–´ ===
st.set_page_config(
    page_title="RadiaTool Pro v2.0",
    page_icon="üîß",
    layout="wide",
    initial_sidebar_state="expanded"
)

# === –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ===
@st.cache_data
def load_data():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–æ–≤"""
    try:
        matrix_path = Path("data/–ú–∞—Ç—Ä–∏—Ü–∞.xlsx")
        brackets_path = Path("data/–ö—Ä–æ–Ω—à—Ç–µ–π–Ω—ã.xlsx")
        
        if not matrix_path.exists():
            st.error("‚ùå –§–∞–π–ª '–ú–∞—Ç—Ä–∏—Ü–∞.xlsx' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ data/")
            st.stop()
        if not brackets_path.exists():
            st.error("‚ùå –§–∞–π–ª '–ö—Ä–æ–Ω—à—Ç–µ–π–Ω—ã.xlsx' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ data/")
            st.stop()
            
        # –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç—Ä–∏—Ü—ã —Ä–∞–¥–∏–∞—Ç–æ—Ä–æ–≤
        sheets = pd.read_excel(matrix_path, sheet_name=None, engine="openpyxl")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–æ–Ω—à—Ç–µ–π–Ω–æ–≤
        brackets_df = pd.read_excel(brackets_path, engine="openpyxl")
        brackets_df['–ê—Ä—Ç–∏–∫—É–ª'] = brackets_df['–ê—Ä—Ç–∏–∫—É–ª'].astype(str).str.strip()
        
        # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü—ã
        for name, df in sheets.items():
            if name != "–ö—Ä–æ–Ω—à—Ç–µ–π–Ω—ã":
                df['–ê—Ä—Ç–∏–∫—É–ª'] = df['–ê—Ä—Ç–∏–∫—É–ª'].astype(str).str.strip()
                df['–í–µ—Å, –∫–≥'] = pd.to_numeric(df['–í–µ—Å, –∫–≥'], errors='coerce').fillna(0)
                df['–û–±—ä–µ–º, –º3'] = pd.to_numeric(df['–û–±—ä–µ–º, –º3'], errors='coerce').fillna(0)
                df['–ú–æ—â–Ω–æ—Å—Ç—å, –í—Ç'] = pd.to_numeric(df['–ú–æ—â–Ω–æ—Å—Ç—å, –í—Ç'], errors='coerce').fillna(0)
                
        return sheets, brackets_df
        
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        st.stop()

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ï–°–°–ò–ò ===
def init_session_state():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏"""
    if 'initialized' not in st.session_state:
        st.session_state.initialized = True
        st.session_state.entry_values = {}
        st.session_state.connection = "VK-–ø—Ä–∞–≤–æ–µ"
        st.session_state.radiator_type = "10"
        st.session_state.bracket_type = "–ù–∞—Å—Ç–µ–Ω–Ω—ã–µ –∫—Ä–æ–Ω—à—Ç–µ–π–Ω—ã"
        st.session_state.radiator_discount = 0.0
        st.session_state.bracket_discount = 0.0
        st.session_state.spec_data = pd.DataFrame()
        st.session_state.show_tooltips = True

# === –ì–õ–ê–í–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° ===
def main():
    init_session_state()
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    sheets, brackets_df = load_data()
    st.session_state.sheets = sheets
    st.session_state.brackets_df = brackets_df
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üîß RadiaTool Pro v2.0")
    st.markdown("---")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    with st.sidebar:
        st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(sheets)}")
        st.success(f"‚úÖ –ö—Ä–æ–Ω—à—Ç–µ–π–Ω–æ–≤: {len(brackets_df)}")
        
        st.markdown("---")
        st.markdown("### üõ†Ô∏è –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
        
        if st.button("üîÑ –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö", use_container_width=True):
            st.session_state.entry_values = {}
            st.session_state.spec_data = pd.DataFrame()
            st.rerun()
            
        if st.button("üìã –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", use_container_width=True):
            if len(st.session_state.entry_values) > 0:
                st.switch_page("pages/02_üìã_–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è.py")
            else:
                st.warning("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–¥–∏–∞—Ç–æ—Ä–æ–≤")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    st.info("üöÄ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RadiaTool Pro!** –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.")

if __name__ == "__main__":
    main()